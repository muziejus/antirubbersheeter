{{#let (file-queue name="files" onFileAdded=this.addFile) as |queue|}}
  <FileDropzone
    @queue={{queue}} 
    @filter={{this.validateFile}}
    as |dropzone|>
      {{#if dropzone.active}}
          <Uploader::Dropbox class="text-dark-blue bg-light-gray">
            <p class="text-2xl">Drop to Upload</p>
          </Uploader::Dropbox>
      {{else if queue.files.length}}
          <Uploader::Dropbox class="text-dark-blue bg-tan">
            <p class="text-2xl">
              {{#if (eq queue.files.length 2)}}
                Map and place data ready to go. Press “Upload” below. ({{queue.progress}}% uploaded)
              {{else}}
                {{#if this.mapUploaded}}
                  Map image added to queue. Please add your place data.
                {{ else }}
                  Place data added to queue. Please add your map image.
                {{/if}}
              {{/if}}
            </p>
          </Uploader::Dropbox>


      {{else if dropzone.supported}}
          <Uploader::Dropbox class="bg-blue text-white">
            <p class="text-2xl">Drag and drop your map image and places .csv here.</p>
          </Uploader::Dropbox>
      {{else}}
        <label> Upload Files
          <input type="file" {{queue.selectFile filter=this.validateFile}}>
        </label>
      {{/if}}
    </FileDropzone>
    {{#if this.showError}}
      <p>{{this.errorMessage}}</p>
    {{/if}}
    {{#if queue.files.length}}
      <QueueTable @queue={{queue}} @typedPlaces={{this.typedPlaces}}/>
      <div class="space-x-3 flex flex-row w-full justify-end">
      <Button class="bg-gray text-xl w-1/4" {{on "click" (fn this.flushQueue queue) }}>
        Reset
      </Button>
      <Button class="text-xl w-1/4" @disabled={{this.uploadButtonDisabled}}
        {{on "click" (fn this.uploadFiles queue) }}>
        Upload
      </Button>
      </div>
    {{/if}}
{{/let}}
